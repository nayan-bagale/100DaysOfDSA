/**
 * The Below code is not Optimal and written by me.
 */
function nextGreatestLetter0(letters: string[], target: string): string {
  let start = 0,
    mid = 0,
    end = letters.length - 1;
  while (start <= end) {
    mid = start + Math.floor((end - start) / 2);
    let res = target.localeCompare(letters[mid]);
    if (res === 0) {
      if (letters[mid] === letters[mid + 1]) {
        start = mid + 1;
        continue;
      }
      if (mid < letters.length - 1) {
        return letters[mid + 1];
      }
      return letters[0];
    }

    if (res > 0) {
      start = mid + 1;
    } else {
      end = mid - 1;
    }
  }
  if (letters[start] === undefined) return letters[0];
  return letters[start];
}

/**
 *
 * The Below code is Optimal and generated by copilot
 */
function nextGreatestLetter(letters: string[], target: string): string {
  let low: number = 0,
    high: number = letters.length;
  while (low < high) {
    let mid: number = Math.floor(low + (high - low) / 2);
    if (letters[mid] <= target) low = mid + 1;
    else high = mid;
  }
  return letters[low % letters.length];
}

console.log(nextGreatestLetter(["c", "f", "j"], "a")); //c
console.log(nextGreatestLetter(["c", "f", "j"], "c")); //f
console.log(nextGreatestLetter(["c", "f", "j"], "j")); //c
console.log(nextGreatestLetter(["x", "x", "y", "y"], "z")); //x
console.log(nextGreatestLetter(["e", "e", "g", "g"], "g")); //e
